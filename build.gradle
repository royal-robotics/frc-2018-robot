plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2019.1.1"
}

repositories {
    mavenCentral()
    jcenter()
}

def TEAM = 2522
def ROBOT_CLASS = "frc.team2522.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.

deploy {
    targets {
       roboRIO("roborio") {
            team = TEAM
        }
    }
    artifacts {
       frcJavaArtifact('frcJava') {
           targets << "roborio"
	   debug = frc.getDebugOrDefault(false)
       }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile pathfinder()
    compile ctre()
    compile navx()
    compile openrio.powerup.matchData()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    testCompile 'junit:junit:4.12'
    compile 'junit:junit:4.12'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}


task runMotionProfile(type: JavaExec) {
    classpath = files('build/libs/Motion-Profile.jar')
    main = 'MotionProfile.Generate'
}

task viewMotionProfile(type: Exec, dependsOn: runMotionProfile) {
    commandLine 'cmd', '/c', 'Rscript', 'scripts/motion-profile.R'
}

// task generateMotionProfile(type: NodeTask) {
//   script = file( 'scripts/generateMotionProfile/motionProfile.js')
//   execOverrides {
//     it.workingDir = 'scripts/generateMotionProfile'
//   }
// }